goal:
Build a secure, enterprise-grade web app for Ethiopian coffee producers/exporters that ingests Excel/CSV or manual data entry, validates it, and produces deep analytics dashboards, AI summaries, and exportable reports. The app must feel premium: fast, minimal, elegant, reliable.

stack:
• Next.js 14 (App Router) + TypeScript
• Tailwind CSS + shadcn/ui + Radix primitives
• State: Zustand
• Data: Prisma + SQLite (switchable to Postgres)
• File import: SheetJS (xlsx)
• Charts: Recharts
• QR codes: qrcode
• Auth: simple email magic link (NextAuth credentials provider stub; use server actions; can be replaced later)
• i18n: next-intl (English + Amharic scaffold)
• PDF export: @react-pdf/renderer
• Validation: Zod + react-hook-form
• Lint/format: ESLint + Prettier
• Testing: Playwright (smoke flows) + Vitest for utils

brand and design system:
• Typography: Inter (display 800, headings 700, body 400/500)
• Color tokens
bg.base: #0B0F14
bg.surface: #0F141A
bg.card: #141A21
text.primary: #E6EBF2
text.muted: #9AA7B2
accent.gold: #D9A441
accent.copper: #B86A3C
border: #22303C
border.alt: #2B3945
success: #38B682, warning: #E9B949, error: #E05252
• Radii: 16px cards, 12px inputs, 9999px pills
• Shadows: default 0 2px 12px rgba(0,0,0,.35); hover 0 6px 24px rgba(0,0,0,.45)
• Spacing: 8-pt grid; container max 1280px; 12-col layout; gutters 24px
• Motion (Framer Motion): page 220ms, enter opacity/y 180ms, hover scale 1.02

core features:

Data intake
• Excel/CSV upload with template download, column mapping UI, and pre-commit diff preview
• Inline manual entry screens with autosave, undo/redo, bulk edit
• Amharic/English locale toggle; ETB/USD support with daily FX snapshot (hard-code mock FX service now)
• Field-level validation and friendly error toasts

Domain model (Prisma)
Lot: id, lotCode, harvestYear, regionZoneWoredaKebele, farmNames, altitudeM, variety, processType(enum: washed|natural|honey|experimental), moisturePct, screenSize, defects, sca scores(aroma,acidity,body,aftertaste,uniformity,overall), certifications[], photos[], notes
Commercial: id, lotId FK, farmgateETBPerKg, fobUSDPerLb, costProcessing, costMilling, costTransport, salePriceUSDPerLb, contractedQtyBags, shippedQtyBags, buyerName, incoterms
Logistics: id, lotId FK, mill, warehouse, bagType, sealIds[], containerNo, billOfLading, vessel, etd, eta, port, status(enum: sample|milled|ready|in_transit|landed|released)
Compliance: id, lotId FK, icoMarks, phytoNo, coaUrl, invoiceUrl, packingListUrl, exportPermitRef
ShipmentEvent: id, logisticsId FK, timestamp, label, meta(json)
User, Org (RBAC scaffold)

Analytics dashboards
• Quality: cupping trend by lot/region/process; moisture vs score; defect heatmap
• Inventory: by status, warehouse aging, available vs committed, sample pipeline
• Commercial: cost stack waterfall (farmgate→FOB→sold), realized margin/lb, FX impact, price bands
• Operations: lead times harvest→milling→export, OTIF, document completeness score
• Each dashboard = KPI row (big numbers + sparkline), 1 dense chart/card, filter chips, saved views

AI copilots (non-LLM stubbed with deterministic summaries now; wrap in a provider for future LLM)
• Season summary: “Top performing regions, standout lots, risks, actionable next steps”
• Pricing coach: recommends min/target prices from cost, quality, benchmark lots
• Spreadsheet auto-insights: outliers, missing fields, anomaly alerts after upload
• Buyer brief generator: one-pager per lot with tasting notes, story, photos, QR link

Traceability and sharing
• Generate QR per lot; public micro-site page shows farm/region, altitude, process, photos, cupping, and optional transparency bands (hide/show sensitive fields via privacy toggles)
• Micro-site is mobile-first, fast, cached; branded with same design tokens

Workflow and documents
• Sample tracking pipeline: send, receive feedback, approve/reject, auto-log notes per buyer
• Document center: create/export invoices and packing lists (mock for now), upload scans, versioning and audit log
• Shipment tracker timeline

Exports and sharing
• Export charts/reports to PDF and PPTX-like PDF deck
• Shareable links with signed token, role-aware redaction

information architecture:
• App shell: topbar 48px, left rail 80px icons with tooltips; content padding 24–32px
• Primary navigation: Overview, Lots, Shipments, Analytics, Documents, Settings
• Secondary: under Lots include tabs [Overview | Quality | Commercial | Traceability] as segmented pills with animated gold underline
• Global search (cmd/ctrl+k) to jump to lot, buyer, document

premium UI patterns to implement:
• Segmented tabs: pill style, active bg #1A2430, 1px inner border #2B3945, animated 2px accent.gold underline
• KPI card: title (muted), 3xl number, sparkline, small “last updated” text, right-aligned delta pill
• Enterprise table: sticky header + first column, zebra hover, column pinning, quick filter chips, saved views, right-aligned currency, status pills
• Skeleton loaders for dashboards and tables; optimistic UI on filters
• Empty states with icon, one-line benefit, and primary CTA

pages to scaffold:
• / (Overview): 4 KPI cards + recent lots table + shipment timeline widget
• /lots: table with filters; import wizard button; “New lot” modal
• /lots/[id]: tabs for Quality, Commercial, Traceability, Documents; QR generator; buyer brief PDF export
• /shipments: timeline view, filter by status; create milestone modal
• /analytics: four sections (Quality, Inventory, Commercial, Operations) with saved views
• /documents: list, upload, versioning, quick preview
• /settings: org, roles, locale, currency, API keys (future)

excel import wizard:
• Step 1: Upload or download template
• Step 2: Column mapping (auto-map by header similarity, allow manual mapping)
• Step 3: Validation results (errors/warnings), show diff preview with counts
• Step 4: Commit; success toast and confetti micro-burst (subtle)

access control:
• Roles: Owner, Manager, QC, Clerk, Viewer
• Protect routes server-side; hide destructive actions for non-owners; write audit logs for all mutations

performance and quality targets:
• First dashboard usable < 60s after first upload (seed with sample data)
• P75 interaction ≤ 200ms for filter changes
• Report generation ≤ 5s for 10k rows
• WCAG 2.1 AA; keyboard nav on all primary actions

developer tasks (please implement):

Create the Next.js app with all deps and Tailwind/shadcn configured; add theme tokens in tailwind.config and CSS variables

Implement App Shell, premium segmented tabs, KPI card, enterprise table, skeletons, and toast system

Build Prisma schema from the domain model; seed with sample data (2 harvest years, 5 regions, 30+ lots)

Implement Excel import wizard with SheetJS and column mapping; run Zod validation and show diff preview

Build all listed pages and tabs with initial charts (Recharts) and saved view persistence (Zustand)

Implement QR generator and public lot micro-site page

Implement PDF export for Buyer Brief (one-pager) and a 5-slide analytics deck

Add basic email magic-link auth (mock provider) and RBAC checks

Add i18n scaffolding with two strings files (en, am) and a locale switcher

Add Playwright smoke tests for: login, import flow, analytics render, QR page, PDF export

copy and microtext tone:
• Calm, enterprise, confident.
• Examples:
• Empty state: “No lots yet. Import from Excel or create your first in under a minute.”
• Filters helper: “Fast filters. Save views for your buyers.”
• Import success: “Data imported. Dashboards are live.”

deliverables:
• Running app with seed data, all pages implemented, premium styling applied
• README with setup steps, feature overview, and how to switch DB to Postgres
• Example Excel template and sample dataset
• Screenshots in /docs of key pages
• Note where to plug an actual LLM for summaries later (provider interface)

acceptance criteria checklist:
[ ] App shell with premium design tokens and animations
[ ] Import wizard with mapping and validation; seed data included
[ ] Lots table with saved views, pinning, filters, and status pills
[ ] Analytics page with 4 sections and KPI row + charts
[ ] Lot detail with tabs, QR generator, buyer brief PDF export
[ ] Public micro-site for QR with privacy toggles
[ ] Documents center with uploads and versioning metadata
[ ] Basic RBAC working; audit log table recorded on mutations
[ ] i18n toggle works; currency ETB/USD switch updates UI values
[ ] Playwright smoke tests pass locally

important:
Do not generate a “basic” UI. Apply the exact tokens, spacing, shadows, radii, and motion above. Tabs must be segmented pills with animated underline. Cards must use inset highlights and deep hover shadows. Tables must support pinning, saved views, and quick filter chips. Use skeletons everywhere data loads.